day03_task

1. day03_task라는 프로젝트를 만든다.
    URL 루트 경로는 /task 이다.
    
2. index.jsp를 만든다. 내용은 다음과 같다.   
    ‘접속’ 이라는 버튼이 있다. 버튼을 누르면 get방식을 사용하여 MyServlet으로 요청이 간다.
    
3. login.jsp를 만든다. 내용은 다음과 같다.   
    사용자에게 아이디와 비밀번호를 입력받아 로그인 버튼을 누르면 post방식을 사용하여 MyServlet으로 요청이 간다.
    
4. com.servlet.app패키지에 MyServlet2이라는 서블릿을 만든다.   
    URL경로는 MyServlet2이다.  
    get방식으로 요청을 받으면 forward 방식으로 page1.jsp로 이동한다.
    post방식으로 요청을 받으면 redirect 방식으로 index.jsp로 이동한다.





day00_mybatis 프로젝트

1. URL 루트 경로는 /mybatis로 설정
2. index.jsp를 회원가입 페이지로 사용
	id, password, name, age, gender를 입력받는다
	데이터 이름은 userId, usrPassword, userName, userAge, userGender로 설정한다
	단, userGender는 라디오 박스로 입력
	요청은 MyServlet으로 우선 get방식으로 보낸다.
3. com.servlet.app.MyServlet.java라는 서블릿을 만든다
	URL 경로는 MyServlet으로 설정한다
	get 방식으로 요청이 들어오면 id, password, name, age, gender를 result.jsp에 출력한다
	forward 방식으로 사용자 페이지를 이동시킨다.


* jsp_am 데이터베이스 생성
* tbl_user 테이블 생성
	user_number int unsigned auto_increment primary key
	user_id varchar(300)
	user_password varchar(300)
	user_name varchar(300)
	user_age tinyint unsigned
	user_gender char(1)

-----------------------------------------------------------------------------------
DBCP(DataBase Connection Pool)
	커넥션 객체를 이용하여 DB에 접근하는데 사용할 때마다 연결과 종료를 반복하면 비효율적이다
	DBCP는 일정량의 커넥션 객체를 미리 만들어두고 Connection Pool에 보관하여
	필요할 때마다 커넥션 객체를 꺼내서 사용하고 반납하는 방식으로 관리해준다

JNDI(Java Naming and Directory Interface)
	외부의 자원을 자바의 객체로 가져와 사용할 때 필요한 기술이며 API이다
	DBCP와 함께 사용하는 이유는 DBCP가 Connection 객체를 생성할 때 필요한 여러 설정값을 저장하고
	괸래후정 DBCP의 효율을 높여주기 때문이다.
	
Framework
	프레임워크는 라이브러리처럼 다른 개발자가 만들어준 코드이다
	라이브러리가 내가 필요할 때 사용하는 도구 모음이라면 프레임워크는 특정 목적을 가지고 만들어진 틀, 규칙이다

MyBatis Framework
	관계형 데이터 베이스를 자바에서 쉽게 다루도록 도와주는 프레임워크
	JDBC의 문제점인 반복되는 코드를 줄여주고 JAVA코드와 SQL코드를 분리하여
	유지보수와 분업에 유리하게 만들어준다
	내부적으로 DBCP를 사용하여 커넥션 객체를 여러개 생성하고 관리하기 때문에 효율이 좋다

SqlSession Factory Builder가 공장을 지어주는데
	공장 설계도가 MyBatis Config File이라는 설정파일
	이 파일을 SqlSessionFactory Builder가 참고하여
	SqlSession Factory를 지어준다
	공장에서 SqlSession을 만들어주고 SqlSession은 Mapper.xml에 작성된 쿼리문을 실행시켜준다

MyBatis의 동작순서
	요청이 들어오기 전에 미리준비한다
	1. 실행중인 Application이 SqlSession Factory Builder를 만들어 놓는다
	2. 팩토리 빌더는 MyBatis Config File이라는 설정파일을 참고한다
	3. 설정파일을 참고하여 SqlSession Factory를 만든다
	
	요청이 들어오면 처리한다
	4. 사용자의 요청이 들어온다
	5. SqlSession Factory에게 세션을 찍으라고 명령한다
	6. 공장에서 Session을 찍어낸다
	7. Application이 SqlSession에게 쿼리를 실행시키게 한다
	8. SqlSession이 Mapper.xml에 있는 쿼리를 실행시킨다.

-----------------------------------------------------------------------------------
ERD 설계
- 로그인(ID, PW)
- 회원가입(ID, PW, 이름, 핸드폰번호, 이메일)
- 후기글(게시글 번호, 제목, 작성자,후기, 날짜, 조회수)
- 댓글
	
	유저테이블
	회원번호, 이름, ID, PW, 핸드폰번호, 이메일
	
	후기테이블
	게시글번호, 회원번호, 제목, 작성자, 후기, 날짜, 조회수

	댓글
	게시글번호, 작성자, 게시글번호,












